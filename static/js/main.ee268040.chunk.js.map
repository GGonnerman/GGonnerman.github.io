{"version":3,"sources":["holder.js","matrix-square.js","add.js","multiply.js","swap.js","matrix.js","GoHawk.png","ThemedPage.js","app.js","header.js","index.js"],"names":["Holder","display","this","isSuccessful","match","length","substr","syncValue","value","fraction","console","log","d","n","s","factor","other","result","add","multiply","equal","syncDisplay","MatrixSquare","update","bind","click","event","props","row","column","target","onClick","pos","frozen","id","tabIndex","style","backgroundColor","color","textAlign","height","width","onChange","className","React","Component","Add","confirmAdd","from","Math","floor","document","getElementById","multiplier","to","action","clear","error","options","i","rowCount","push","placeholder","Multiply","confirmMultiply","toChange","multiplierChange","setState","Swap","confirmSwap","swapA","swapB","Matrix","data","source","mheight","currentRow","mwidth","state","recieveFromSquare","clearFunctions","swap","full","actuallyChanged","deepcopy","format_fraction","a","b","aData","bData","firstSelect","secondSelect","select","e","newDisplay","setDisplay","freeze","getDisplay","controls","ThemedPage","children","rel","href","alt","src","GoHawkImage","App","stage","currentIndex","setMatrix","freezeMatrix","reset","updateMatrix","last","allMatricies","descriptions","description","slice","rows","columns","returnValue","htmlFor","marginRight","out","random","Header","Helmet","ReactDOM","render"],"mappings":"wOAEaA,EAAb,WACI,aAAyB,IAAbC,EAAY,uDAAJ,GAAI,oBACpBC,KAAKD,QAAUA,EAGfC,KAAKC,cAAe,EAL5B,0CAQI,WACQD,KAAKD,UAAWC,KAAKD,QAAU,OAT3C,wBAYI,WACI,OAAOC,KAAKD,UAbpB,wBAgBI,SAAWA,GACP,IAAGA,EAAQG,MAAM,YAAjB,CACA,KAAMH,EAAQI,OAAS,GAAoB,MAAfJ,EAAQ,IAChCA,EAAUA,EAAQK,OAAO,GAE7BJ,KAAKD,QAAUA,EACfC,KAAKK,eAtBb,sBAyBI,WACI,OAAOL,KAAKM,QA1BpB,uBA6BI,WACI,IACIN,KAAKM,MAAQC,YAASP,KAAKD,SAC3BC,KAAKC,cAAe,EACpBO,QAAQC,IAAI,8BACd,SACET,KAAKC,cAAe,EACpBO,QAAQC,IAAI,wBAEhB,OAAOT,KAAKM,QAtCpB,yBAyCI,WACI,IACwB,MAAjBN,KAAKM,MAAMI,GAA8B,IAAjBV,KAAKM,MAAMI,EAClCV,KAAKD,QAAUC,KAAKM,MAAMK,EAE1BX,KAAKD,QAAUC,KAAKM,MAAMK,EAAI,IAAMX,KAAKM,MAAMI,EAE/B,OAAjBV,KAAKM,MAAMM,IAAgC,IAAlBZ,KAAKM,MAAMM,IACnCZ,KAAKD,QAAU,IAAMC,KAAKD,SAEhC,SACES,QAAQC,IAAI,6BApDxB,iBAwDI,SAAII,EAAQC,GACRd,KAAKK,YACLS,EAAMT,YACN,IAAIU,EAASC,YAAIhB,KAAKM,MAAOW,YAASJ,EAAQC,EAAMR,QACpD,OAAGY,YAAMlB,KAAKM,MAAOS,KAErBP,QAAQC,IAAIT,KAAKM,MAAOS,GACxBf,KAAKM,MAAQS,EACbf,KAAKmB,eACE,KAjEf,sBAoEI,SAASN,GACLb,KAAKK,YACL,IAAIU,EAASE,YAASJ,EAAQb,KAAKM,OAGnC,OAFAE,QAAQC,IAAI,MACZD,QAAQC,IAAIT,KAAKM,MAAOS,EAAQF,IAC7BK,YAAMlB,KAAKM,MAAOS,KACrBf,KAAKM,MAAQS,EACbf,KAAKmB,eACE,OA5Ef,K,OCCaC,EAAb,wKAEE,WACEpB,KAAKqB,OAASrB,KAAKqB,OAAOC,KAAKtB,MAC/BA,KAAKuB,MAAQvB,KAAKuB,MAAMD,KAAKtB,QAJjC,oBAOE,SAAOwB,GACLxB,KAAKyB,MAAMJ,OAAOrB,KAAKyB,MAAMC,IAAK1B,KAAKyB,MAAME,OAAQH,EAAMI,OAAOtB,SARtE,mBAWE,WACMN,KAAKyB,MAAMI,SACf7B,KAAKyB,MAAMI,QAAQ7B,KAAKyB,MAAMK,OAblC,oBAgBE,WACE,OAAG9B,KAAKyB,MAAMM,OAEV,uBAAOC,GAAIhC,KAAKyB,MAAMO,GAAIC,SAAS,KAAKJ,QAAS7B,KAAKuB,MAAOW,MAAO,CAACC,gBAAiBnC,KAAKyB,MAAMW,MAAOC,UAAW,SAAUC,OAAQ,MAAUC,MAAO,OAAWC,SAAUxC,KAAKqB,OAAQf,MAAON,KAAKyB,MAAMnB,MAAOmC,UAAU,iBAI3N,uBAAOT,GAAIhC,KAAKyB,MAAMO,GAAIH,QAAS7B,KAAKuB,MAAOW,MAAO,CAACC,gBAAiBnC,KAAKyB,MAAMW,MAAOC,UAAW,SAAUC,OAAQ,MAAUC,MAAO,OAAWC,SAAUxC,KAAKqB,OAAQf,MAAON,KAAKyB,MAAMnB,MAAOmC,UAAU,qBAvBrN,GAAkCC,IAAMC,WCC3BC,EAAb,kDAEE,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,WAAa,EAAKA,WAAWvB,KAAhB,gBAFD,EAFrB,8CAOE,WACE,IACE,IAAMwB,EAAOC,KAAKC,MAAOC,SAASC,eAAe,WAAW5C,OAAU,EAChE6C,EAAa5C,YAAU0C,SAASC,eAAe,iBAAiB5C,OAAS,GACzE8C,EAAKL,KAAKC,MAAOC,SAASC,eAAe,SAAS5C,OAAU,EAClEN,KAAKyB,MAAM4B,OAAOD,EAAID,EAAYL,GAClC9C,KAAKyB,MAAM6B,QACX,MAAMC,GACN/C,QAAQC,IAAI,YAAa8C,MAf/B,oBAmBE,WAEE,IADA,IAAIC,EAAU,GACNC,EAAI,EAAGA,GAAKzD,KAAKyB,MAAMiC,SAAUD,IACvCD,EAAQG,KAAK,wBAAQrD,MAAOmD,EAAf,SAA2BA,GAAJA,IAEpC,OACI,sBAAKhB,UAAU,aAAf,oBAEI,wBAAQT,GAAG,UAAX,SACGwB,IAEH,iDACA,uBAAOxB,GAAG,gBAAgB4B,YAAY,MAN1C,UAOI,wBAAQ5B,GAAG,QAAX,SACGwB,IAEH,wBAAQ3B,QAAS7B,KAAK6C,WAAtB,4BAnCd,GAAyBH,IAAMC,WCAlBkB,EAAb,kDAEE,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDqC,gBAAkB,EAAKA,gBAAgBxC,KAArB,gBACvB,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,iBAAmB,EAAKA,iBAAiB1C,KAAtB,gBAJP,EAFrB,4CAaE,SAAShB,GACPN,KAAKiE,SAAS,CACZb,GAAI9C,EAAMsB,OAAOtB,UAfvB,8BAmBE,SAAiBA,GACfN,KAAKiE,SAAS,CACZd,WAAY7C,EAAMsB,OAAOtB,UArB/B,6BAyBE,WACE,IACE,IAAM8C,EAAKL,KAAKC,MAAOC,SAASC,eAAe,cAAc5C,OAAU,EACjE6C,EAAa5C,YAAU0C,SAASC,eAAe,sBAAsB5C,OAAS,GACpFN,KAAKyB,MAAM4B,OAAOD,EAAID,GACtBnD,KAAKyB,MAAM6B,QAEb,MAAOC,GACL/C,QAAQC,IAAI,iBAAkB8C,MAjCpC,oBAqCE,WAEE,IADA,IAAIC,EAAU,GACNC,EAAI,EAAGA,GAAKzD,KAAKyB,MAAMiC,SAAUD,IACvCD,EAAQG,KAAK,wBAAQrD,MAAOmD,EAAf,SAA2BA,GAAJA,IAEpC,OACI,sBAAKhB,UAAU,aAAf,yBAEI,wBAAQD,SAAUxC,KAAK+D,SAAU/B,GAAG,aAApC,SACGwB,IAEH,sCACA,uBAAOhB,SAAUxC,KAAKgE,iBAAkBhC,GAAG,qBAAqB4B,YAAY,MAC5E,wBAAQ/B,QAAS7B,KAAK8D,gBAAtB,4BAlDd,GAA8BpB,IAAMC,WCDvBuB,EAAb,kDAEE,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IACD0C,YAAc,EAAKA,YAAY7C,KAAjB,gBAFF,EAFrB,+CAOE,WACE,IAAM8C,EAAQrB,KAAKC,MAAOC,SAASC,eAAe,SAAS5C,OAAU,EAC/D+D,EAAQtB,KAAKC,MAAOC,SAASC,eAAe,SAAS5C,OAAU,EACrEN,KAAKyB,MAAM4B,OAAOe,EAAOC,GACzBrE,KAAKyB,MAAM6B,UAXf,oBAcE,WAEE,IADA,IAAIE,EAAU,GACNC,EAAI,EAAGA,GAAKzD,KAAKyB,MAAMiC,SAAUD,IACvCD,EAAQG,KAAK,wBAAQrD,MAAOmD,EAAf,SAA2BA,GAAJA,IAEpC,OACI,sBAAKhB,UAAU,aAAf,sBAEI,wBAAQT,GAAG,QAAX,SACGwB,IAEH,uCACA,wBAAQxB,GAAG,QAAX,SACGwB,IAEH,wBAAQ3B,QAAS7B,KAAKmE,YAAtB,4BA7Bd,GAA0BzB,IAAMC,WCMnB2B,EAAb,kDAEI,WAAY7C,GAAQ,IAAD,sBAGf,IAAI8C,EAAO,GAIX,IANA,cAAM9C,IAIEA,MAAM+C,SAAoB,EAE/B,EAAK/C,MAAM+C,OACV,IAAI,IAAI9C,EAAM,EAAGA,EAAM,EAAKD,MAAMgD,QAAS/C,IAAO,CAE9C,IADA,IAAIgD,EAAa,GACT/C,EAAS,EAAGA,EAAS,EAAKF,MAAMkD,OAAQhD,IAE5CnB,QAAQC,IAAI,gCACZiE,EAAWf,KAAK,IAAI7D,EAAO,EAAK2B,MAAM+C,OAAO9C,GAAKC,GAAQ5B,UAE9DwE,EAAKZ,KAAKe,QAGd,IAAI,IAAIhD,EAAM,EAAGA,EAAM,EAAKD,MAAMgD,QAAS/C,IAAO,CAE9C,IADA,IAAIgD,EAAa,GACT/C,EAAS,EAAGA,EAAS,EAAKF,MAAMkD,OAAQhD,IAC5CnB,QAAQC,IAAI,gCACZiE,EAAWf,KAAK,IAAI7D,GAExByE,EAAKZ,KAAKe,GAxBH,OA4Bf,EAAKE,MAAQ,CACTL,KAAMA,GAGV,EAAKM,kBAAoB,EAAKA,kBAAkBvD,KAAvB,gBACzB,EAAKwD,eAAiB,EAAKA,eAAexD,KAApB,gBACtB,EAAKN,IAAM,EAAKA,IAAIM,KAAT,gBACX,EAAKL,SAAW,EAAKA,SAASK,KAAd,gBAChB,EAAKyD,KAAO,EAAKA,KAAKzD,KAAV,gBApCG,EAFvB,4CAyCI,WAGI,IADA,IAAI0D,EAAO,GACHtD,EAAM,EAAGA,EAAM1B,KAAKyB,MAAMgD,QAAS/C,IAAO,CAE9C,IADA,IAAIgD,EAAa,GACT/C,EAAS,EAAGA,EAAS3B,KAAKyB,MAAMkD,OAAQhD,IAC5C+C,EAAWf,KAAK,IAAI7D,EAAOE,KAAK4E,MAAML,KAAK7C,GAAKC,GAAQ5B,UAE5DiF,EAAKrB,KAAKe,GAEd,OAAOM,IAnDf,iBAsDI,SAAI5B,EAAID,EAAYL,GAChBtC,QAAQC,IAAI,yBAEZ,IADA,IAAIwE,GAAkB,EACdtD,EAAS,EAAGA,EAAS3B,KAAKyB,MAAMkD,OAAQhD,IAC5CnB,QAAQC,IAAI,eACZD,QAAQC,IAAIT,KAAK4E,MAAML,KAAKnB,GAAKpD,KAAK4E,MAAML,KAAKzB,IAC9C9C,KAAK4E,MAAML,KAAKnB,GAAIzB,GAAQX,IAAImC,EAAYnD,KAAK4E,MAAML,KAAKzB,GAAMnB,MACjEsD,GAAkB,GAG1BzE,QAAQC,IAAI,oBACTwE,IACCjF,KAAKqB,SACLrB,KAAKyB,MAAMJ,OAAOrB,KAAKkF,WACnB,oBAAGhD,MAAO,CAACG,UAAW,UAAtB,mBACU,sBAAMI,UAAU,WAAhB,SAA4BzC,KAAKmF,gBAAgBhC,KAD3D,cACyF,sBAAMV,UAAU,WAAhB,SAA4BK,EAAK,IAD1H,WAC2I,sBAAML,UAAU,WAAhB,SAA4BW,EAAG,WArE1L,6BA2EI,SAAgB7C,GACZ,IAAIR,EAAU,GASd,OAPIA,EADc,MAAfQ,EAASG,GAA4B,IAAfH,EAASG,EACpBH,EAASI,EAETJ,EAASI,EAAI,IAAMJ,EAASG,EAExB,OAAfH,EAASK,IAA8B,IAAhBL,EAASK,IAC/Bb,EAAU,IAAMA,GAEbA,IArFf,sBAwFI,SAASqD,EAAID,GACEnD,KAAKkF,WAEhB,IAFA,IACID,GAAkB,EACdtD,EAAS,EAAGA,EAAS3B,KAAKyB,MAAMkD,OAAQhD,IAC5CnB,QAAQC,IAAI,iBACTT,KAAK4E,MAAML,KAAKnB,GAAIzB,GAAQV,SAASkC,KACpC8B,GAAkB,GAGvBA,IACCjF,KAAKqB,SACLrB,KAAKyB,MAAMJ,OAAOrB,KAAKkF,WACnB,oBAAGhD,MAAO,CAACG,UAAW,UAAtB,4BACmB,sBAAMI,UAAU,WAAhB,SAA4BW,EAAG,IADlD,OAC+D,sBAAMX,UAAU,WAAhB,SAA4BzC,KAAKmF,gBAAgBhC,YArGhI,kBA2GI,SAAKiC,EAAGC,GACOrF,KAAKkF,WAEhB,IAFA,IACID,GAAkB,EACdtD,EAAS,EAAGA,EAAS3B,KAAKyB,MAAMkD,OAAQhD,IAAU,CACtD,IAAI2D,EAAQtF,KAAK4E,MAAML,KAAKa,GAAGzD,GAC/B2D,EAAMjF,YACN,IAAIkF,EAAQvF,KAAK4E,MAAML,KAAKc,GAAG1D,GAC/B4D,EAAMlF,YACFa,YAAMoE,EAAMhF,MAAOiF,EAAMjF,SAAQ2E,GAAkB,GACvDjF,KAAK4E,MAAML,KAAKa,GAAGzD,GAAU3B,KAAK4E,MAAML,KAAKc,GAAG1D,GAChD3B,KAAK4E,MAAML,KAAKc,GAAG1D,GAAU2D,EAE9BL,IACCjF,KAAKqB,SACLrB,KAAKyB,MAAMJ,OAAOrB,KAAKkF,WACnB,oBAAGhD,MAAO,CAACG,UAAW,UAAtB,0BACiB,sBAAMI,UAAU,WAAhB,SAA4B2C,EAAE,IAD/C,QAC6D,sBAAM3C,UAAU,WAAhB,SAA4B4C,EAAE,WA3H3G,4BAiII,WACI,IACI,IAAMrE,EAAM,CACRwE,YAAavC,SAASC,eAAe,WACrCuC,aAAcxC,SAASC,eAAe,SACtCC,WAAYF,SAASC,eAAe,kBAElCjC,EAAW,CACbyE,OAAQzC,SAASC,eAAe,cAChCC,WAAYF,SAASC,eAAe,uBAElC6B,EAAO,CACTS,YAAavC,SAASC,eAAe,SACrCuC,aAAcxC,SAASC,eAAe,UAM1ClC,EAAIwE,YAAYlF,MAHI,EAIpBU,EAAIyE,aAAanF,MAJG,EAKpBU,EAAImC,WAAW7C,MAJS,GAMxBW,EAASyE,OAAOpF,MAPI,EAQpBW,EAASkC,WAAW7C,MAPI,GASxByE,EAAKS,YAAYlF,MAVG,EAWpByE,EAAKU,aAAanF,MAXE,EAapBE,QAAQC,IAAI,WACd,MAAMkF,GACJnF,QAAQC,IAAI,mBAAoBkF,MAhK5C,+BAoKI,SAAkBjE,EAAKC,EAAQiE,GACxB5F,KAAKyB,MAAMM,SACd/B,KAAK4E,MAAML,KAAK7C,GAAKC,GAAQkE,WAAWD,GACxC5F,KAAKqB,SACLrB,KAAKyB,MAAMJ,OAAOrB,KAAKkF,eAxK/B,oBA2KI,WAAWlF,KAAKiE,SAAS,MA3K7B,oBA6KI,WAGI,IADA,IAAIlE,EAAU,GACN2B,EAAM,EAAGA,EAAM1B,KAAK4E,MAAML,KAAKpE,OAAQuB,IAAO,CAElD,IADA,IAAIgD,EAAa,GACT/C,EAAS,EAAGA,EAAS3B,KAAK4E,MAAML,KAAK7C,GAAKvB,OAAQwB,IACnD3B,KAAKyB,MAAMM,QAAU/B,KAAK4E,MAAML,KAAK7C,GAAKC,GAAQmE,SACrDpB,EAAWf,KAEP,cAAC,EAAD,CAAc5B,OAAQ/B,KAAKyB,MAAMM,OAAQK,MAAOpC,KAAKyB,MAAMW,MAAOP,QAAS7B,KAAKyB,MAAMI,QAASC,IAAK9B,KAAKyB,MAAMK,IAAKT,OAAQrB,KAAK6E,kBAAmBnD,IAAKA,EAAKC,OAAQA,EAAQrB,MAAON,KAAK4E,MAAML,KAAK7C,GAAKC,GAAQoE,cAAmBrE,EAAI,KAAKC,IAItP5B,EAAQ4D,KACJ,8BACKe,GADKhD,IAOlB,OACI,qCACA,qBAAKe,UAAU,SAAf,SACI,qBAAKT,GAAIhC,KAAKyB,MAAMO,GAAIS,UAAWzC,KAAKyB,MAAMgB,UAA9C,SACK1C,MAGJC,KAAKyB,MAAMuE,UACR,qCACA,uBACA,sBAAKhE,GAAG,WAAR,UACI,cAAC,EAAD,CAAK0B,SAAU1D,KAAKyB,MAAMgD,QAASpB,OAAQrD,KAAKgB,IAAKsC,MAAOtD,KAAK8E,iBACjE,uBACA,cAAC,EAAD,CAAUpB,SAAU1D,KAAKyB,MAAMgD,QAASpB,OAAQrD,KAAKiB,SAAUqC,MAAOtD,KAAK8E,iBAC3E,uBACA,cAAC,EAAD,CAAMpB,SAAU1D,KAAKyB,MAAMgD,QAASpB,OAAQrD,KAAK+E,KAAMzB,MAAOtD,KAAK8E,8BAjN3F,GAA4BpC,IAAMC,WCTnB,MAA0B,mCCG5BsD,EAAb,4JACI,WACI,OACI,qCACI,qBAAKxD,UAAU,SAAf,SACI,kEAEJ,qBAAKA,UAAU,MAAf,eACA,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,WAAf,SACCzC,KAAKyB,MAAMyE,eAIpB,oBAAGzD,UAAU,UAAb,cAAwB,mBAAGT,GAAG,WAAWC,SAAS,KAAKkE,IAAI,aAAavE,OAAO,SAASwE,KAAK,+BAArE,eAAxB,UAAwI,mBAAGA,KAAK,8BAA8BD,IAAI,aAAalE,SAAS,KAAKL,OAAO,SAA5E,yBAAxI,MAA+O,mBAAGwE,KAAK,6BAA6BnE,SAAS,KAAKkE,IAAI,aAAavE,OAAO,SAA3E,iCAC/O,sBAAKa,UAAU,cAAf,UACI,qBAAKT,GAAG,YAAYS,UAAU,MAAM4D,IAAI,GAAGC,IAAKC,IAChD,qBAAKvE,GAAG,aAAaS,UAAU,MAAM4D,IAAI,GAAGC,IAAKC,iBAnBzE,GAAgC7D,IAAMC,WCEzB6D,EAAb,kDAEI,aAAe,IAAD,8BACV,gBACK5B,MAAQ,CACT6B,MAAO,EACPC,aAAc,GAElB,EAAKC,UAAY,EAAKA,UAAUrF,KAAf,gBACjB,EAAKsF,aAAe,EAAKA,aAAatF,KAAlB,gBACpB,EAAKuF,MAAQ,EAAKA,MAAMvF,KAAX,gBACb,EAAKwF,aAAe,EAAKA,aAAaxF,KAAlB,gBACpB,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKyF,KAAO,EACZ,EAAKC,aAAe,GACpB,EAAKC,aAAe,GACpB,EAAKP,aAAe,EAdV,EAFlB,yCAmBI,SAAM5E,GACFtB,QAAQC,IAAI,yBAA0BqB,GACtC9B,KAAKiE,SAAS,CACVyC,aAAc5E,MAtB1B,0BA0BI,SAAayC,GAAuB,IAAjB2C,EAAgB,uDAAJ,GAC3B1G,QAAQC,IAAI,qBACZD,QAAQC,IAAI,OAAQT,KAAK+G,MACzBvG,QAAQC,IAAI,MAAO8D,GACnBvE,KAAKgH,aAAehH,KAAKgH,aAAaG,MAAM,EAAGnH,KAAK4E,MAAM8B,aAAa,GACvE1G,KAAKiH,aAAejH,KAAKiH,aAAaE,MAAM,EAAGnH,KAAK4E,MAAM8B,cAC1D1G,KAAKgH,aAAarD,KAAKY,GACvBvE,KAAKiH,aAAatD,KAAKuD,GACvB1G,QAAQC,IAAIT,KAAKgH,cACjBhH,KAAKiE,SAAS,CACVyC,aAAc1G,KAAK4E,MAAM8B,aAAa,MApClD,mBAwCI,WACI1G,KAAKgH,aAAe,GACpBhH,KAAKiE,SAAS,CACVwC,MAAO,MA3CnB,uBA+CI,WACI,IAAMW,EAAOnE,SAASC,eAAe,OAAO5C,MACtC+G,EAAUpE,SAASC,eAAe,UAAU5C,MAClDN,KAAKiE,SAAS,CACVwC,MAAO,EACPW,KAAMA,EACNC,QAASA,MArDrB,0BAyDI,WACIrH,KAAKiE,SAAS,CACVwC,MAAO,EACPC,aAAc,IAElB1G,KAAKgH,aAAe,CAAChH,KAAKgH,aAAahH,KAAKgH,aAAa7G,OAAO,IAChEH,KAAKiH,aAAe,GACpBzG,QAAQC,IAAI,uBACZD,QAAQC,IAAIT,KAAKgH,gBAjEzB,oBAoEI,WACI,IAAIM,EAAc,GAClB,OAAOtH,KAAK4E,MAAM6B,OACd,KAAK,EAED,IADA,IAAIjD,EAAU,GACNC,EAAI,EAAGA,EAAI,GAAIA,IACnBD,EAAQG,KAAK,wBAAgBrD,MAAOmD,EAAvB,SAA2BA,GAAdA,IAE9B6D,EACI,eAAC,EAAD,WACI,mBAAG7E,UAAU,0BAAb,4FACA,uBACA,qBAAKA,UAAU,SAAf,SACI,+BACI,+BACI,uBAAO8E,QAAQ,MAAf,kCACA,wBAAQvF,GAAG,MAAX,SACKwB,OAGT,uBAPJ,IAOU,uBACN,+BACI,uBAAO+D,QAAQ,SAAf,qCACA,wBAAQvF,GAAG,SAASE,MAAO,CAACsF,YAAY,OAAxC,SACKhE,YAKjB,uBApBJ,IAoBU,uBACN,wBAAQf,UAAU,uBAAuBZ,QAAS7B,KAAK2G,UAAvD,uBAGR,MACJ,KAAK,EACDW,EACI,eAAC,EAAD,WACI,oBAAG7E,UAAU,eAAb,mGAAkH,uBAAlH,0GACA,uBACA,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,CAAQT,GAAG,SAASX,OAAQrB,KAAK8G,aAAcnC,OAAQ3E,KAAK4E,MAAMyC,QAAS5C,QAASzE,KAAK4E,MAAMwC,SAEnG,uBANJ,IAMU,uBACN,wBAAQ3E,UAAU,gBAAgBR,SAAS,KAAKJ,QAAS7B,KAAK6G,MAA9D,mBACA,wBAAQpE,UAAU,uBAAuBZ,QAAS7B,KAAK4G,aAAvD,uBAGR,MACJ,KAAK,EAED,IADA,IAAIa,EAAM,GACFhE,EAAI,EAAGA,EAAIzD,KAAKgH,aAAa7G,OAAQsD,IAAK,CAE9C,IAAIzB,EAAKyB,EACLrB,EAAQ,UACTqB,IAAMzD,KAAK4E,MAAM8B,eAChBtE,EAAM,UACNJ,EAAKe,KAAK2E,UAEdD,EAAI9D,KACA,qCACA,cAAC,EAAD,CAAQvB,MAAOA,EAAOP,QAAS7B,KAAKuB,MAAOO,IAAK2B,EAAYe,OAAQxE,KAAKgH,aAAavD,GAAI1B,QAAQ,EAAM4C,OAAQ3E,KAAK4E,MAAMyC,QAAS5C,QAASzE,KAAK4E,MAAMwC,MAAhGpF,GACvDhC,KAAKiH,aAAaxD,OAI3B6D,EACI,eAAC,EAAD,WACI,mBAAG7E,UAAU,0BAAb,yFACA,cAAC,EAAD,CAAQpB,OAAQrB,KAAK8G,aAA4C9E,GAAG,SAASwC,OAAQxE,KAAKgH,aAAahH,KAAK4E,MAAM8B,cAAe3E,QAAQ,EAAMiE,UAAU,EAAMrB,OAAQ3E,KAAK4E,MAAMyC,QAAS5C,QAASzE,KAAK4E,MAAMwC,MAAvKpH,KAAK4E,MAAM8B,cACnD,uBACA,wBAAQjE,UAAU,gBAAgBR,SAAS,KAAKJ,QAAS7B,KAAK6G,MAA9D,mBACA,qBAAKpE,UAAU,MAAf,SACKgF,OAIb,MACJ,QACIH,EACI,oFAIZ,OAAOA,MAvJf,GAAyB5E,IAAMC,W,QCElBgF,EAAb,4JAEI,WACI,OACI,qCACA,cAACC,EAAA,EAAD,UACI,gCARJ,wBAUA,cAAC,EAAD,WARZ,GAA4BlF,IAAMC,WCDlCkF,IAASC,OACL,cAAC,EAAD,IACA7E,SAASC,eAAe,W","file":"static/js/main.ee268040.chunk.js","sourcesContent":["import { add, multiply, fraction, equal } from 'mathjs';\n\nexport class Holder {\n    constructor(display=\"\") {\n        this.display = display;\n        //this.value = fraction(\"0\");\n        //this.syncValue();\n        this.isSuccessful = true;\n    }\n\n    freeze() {\n        if(!this.display) { this.display = \"0\"; }\n    }\n\n    getDisplay() {\n        return this.display;\n    }\n\n    setDisplay(display) {\n        if(display.match(\"[^0-9-/]\")) return;\n        while(display.length > 1 && display[0] === \"0\") {\n            display = display.substr(1);\n        }\n        this.display = display;\n        this.syncValue();\n    }\n\n    getValue() {\n        return this.value;\n    }\n\n    syncValue() {\n        try {\n            this.value = fraction(this.display)\n            this.isSuccessful = true;\n            console.log(\"Synced Values Successfully\");\n        } catch {\n            this.isSuccessful = false;\n            console.log(\"Errors Syncing Value\");\n        }\n        return this.value;\n    }\n\n    syncDisplay() {\n        try {\n            if(this.value.d === \"1\" || this.value.d === 1) {\n                this.display = this.value.n;\n            } else {\n                this.display = this.value.n + \"/\" + this.value.d;\n            }\n            if(this.value.s === \"-1\" || this.value.s === -1) {\n                this.display = \"-\" + this.display;\n            }\n        } catch {\n            console.log(\"Errors Syncing Display\");\n        }\n    }\n\n    add(factor, other) {\n        this.syncValue();\n        other.syncValue();\n        let result = add(this.value, multiply(factor, other.value));\n        if(equal(this.value, result)) return false;\n        // TODO: Clean up and add this checking to other options (multiply, i guess swap doesnt exist; probably make it exist)\n        console.log(this.value, result);\n        this.value = result;\n        this.syncDisplay();\n        return true;\n    }\n\n    multiply(factor) {\n        this.syncValue();\n        let result = multiply(factor, this.value);\n        console.log(\"YO\");\n        console.log(this.value, result, factor);\n        if(equal(this.value, result)) return false;\n        this.value = result;\n        this.syncDisplay();\n        return true;\n    }\n}","import React from 'react';\nimport './index.css';\n\nexport class MatrixSquare extends React.Component {\n\n  componentWillMount() {\n    this.update = this.update.bind(this);\n    this.click = this.click.bind(this);\n  }\n\n  update(event) {\n    this.props.update(this.props.row, this.props.column, event.target.value);\n  }\n\n  click() {\n    if(!this.props.onClick) return;\n    this.props.onClick(this.props.pos);\n  }\n\n  render() {\n    if(this.props.frozen) {\n      return (\n        <input id={this.props.id} tabIndex=\"-1\" onClick={this.click} style={{backgroundColor: this.props.color, textAlign: \"center\", height: 2 + \"em\", width: 3 + \"em\"}} onChange={this.update} value={this.props.value} className=\"matrixSquare\"></input>\n      );\n    } else {\n      return (\n        <input id={this.props.id} onClick={this.click} style={{backgroundColor: this.props.color, textAlign: \"center\", height: 2 + \"em\", width: 3 + \"em\"}} onChange={this.update} value={this.props.value} className=\"matrixSquare\"></input>\n      );\n    }\n  }\n\n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport './index.css';\n\nexport class Add extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmAdd = this.confirmAdd.bind(this);\n  }\n\n  confirmAdd() {\n    try {\n      const from = Math.floor( document.getElementById(\"addFrom\").value ) - 1;\n      const multiplier = fraction( document.getElementById(\"addMultiplier\").value || 0 );\n      const to = Math.floor( document.getElementById(\"addTo\").value ) - 1;\n      this.props.action(to, multiplier, from);\n      this.props.clear();\n    } catch(error) {\n      console.log(\"Add Error\", error);\n    }\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Add row\n              <select id='addFrom'>\n                {options}\n              </select>\n              <span>multiplied by</span>\n              <input id=\"addMultiplier\" placeholder=\"0\"></input> to row\n              <select id='addTo'>\n                {options}\n              </select>\n              <button onClick={this.confirmAdd}>Confirm</button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport './index.css';\n\nexport class Multiply extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmMultiply = this.confirmMultiply.bind(this);\n    this.toChange = this.toChange.bind(this);\n    this.multiplierChange = this.multiplierChange.bind(this);\n    // this.state = {\n    //   to: 1,\n    //   multiplier: \"\"\n    // }\n  }\n\n  toChange(value) {\n    this.setState({\n      to: value.target.value\n    });\n  }\n\n  multiplierChange(value) {\n    this.setState({\n      multiplier: value.target.value\n    });\n  }\n\n  confirmMultiply() {\n    try {\n      const to = Math.floor( document.getElementById(\"multiplyTo\").value ) - 1;\n      const multiplier = fraction( document.getElementById(\"multiplyMultiplier\").value || 1 );\n      this.props.action(to, multiplier);\n      this.props.clear();\n    }\n    catch (error) {\n      console.log(\"Multiply Error\", error);\n    }\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Multiply row\n              <select onChange={this.toChange} id='multiplyTo'>\n                {options}\n              </select>\n              <span>by</span>\n              <input onChange={this.multiplierChange} id=\"multiplyMultiplier\" placeholder=\"1\"></input>\n              <button onClick={this.confirmMultiply}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport './index.css';\n\nexport class Swap extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmSwap = this.confirmSwap.bind(this);\n  }\n\n  confirmSwap() {\n    const swapA = Math.floor( document.getElementById(\"swapA\").value ) - 1;\n    const swapB = Math.floor( document.getElementById(\"swapB\").value ) - 1;\n    this.props.action(swapA, swapB);\n    this.props.clear();\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Swap rows\n              <select id='swapA'>\n                {options}\n              </select>\n              <span>and</span>\n              <select id='swapB'>\n                {options}\n              </select>\n              <button onClick={this.confirmSwap}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n}","import React from 'react';\nimport './index.css';\nimport { Holder } from './holder.js';\nimport { equal, format } from 'mathjs';\nimport { MatrixSquare } from './matrix-square.js';\nimport { Add } from './add.js';\nimport { Multiply } from './multiply.js';\nimport { Swap } from './swap.js';\n\nexport class Matrix extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        let data = [];\n        let hasSource = false;\n        if(this.props.source) hasSource = true;\n\n        if(this.props.source) {\n            for(let row = 0; row < this.props.mheight; row++) {\n                let currentRow = [];\n                for(let column = 0; column < this.props.mwidth; column++) {\n                    //currentRow.push(new Holder());\n                    console.log(\"Checking for sources....!!!!\");\n                    currentRow.push(new Holder(this.props.source[row][column].display));\n                }\n                data.push(currentRow);\n            }\n        } else {\n            for(let row = 0; row < this.props.mheight; row++) {\n                let currentRow = [];\n                for(let column = 0; column < this.props.mwidth; column++) {\n                    console.log(\"Checking for sources....!!!!\");\n                    currentRow.push(new Holder());\n                }\n                data.push(currentRow);\n            }\n        }\n\n        this.state = {\n            data: data\n        };\n\n        this.recieveFromSquare = this.recieveFromSquare.bind(this);\n        this.clearFunctions = this.clearFunctions.bind(this);\n        this.add = this.add.bind(this);\n        this.multiply = this.multiply.bind(this);\n        this.swap = this.swap.bind(this);\n    }\n\n    deepcopy() {\n        // TOODO: Potentially change to a mapping system\n        let full = [];\n        for(let row = 0; row < this.props.mheight; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.props.mwidth; column++) {\n                currentRow.push(new Holder(this.state.data[row][column].display));\n            }\n            full.push(currentRow);\n        }\n        return full;\n    }\n\n    add(to, multiplier, from) {\n        console.log(\"Got into adding stage\");\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            console.log(\"Got looping\");\n            console.log(this.state.data[to], this.state.data[from]);\n            if(this.state.data[to][column].add(multiplier, this.state.data[from][column])) {\n                actuallyChanged = true;\n            }\n        }\n        console.log(\"Finished looping\");\n        if(actuallyChanged) {\n            this.update();\n            this.props.update(this.deepcopy(), (\n                <p style={{textAlign: \"center\"}}>\n                    Added <span className=\"standout\">{this.format_fraction(multiplier)}</span> times row <span className=\"standout\">{from+1}</span> to row <span className=\"standout\">{to+1}</span>\n                </p>\n            ));\n        }\n    }\n\n    format_fraction(fraction) {\n        let display = \"\"\n        if(fraction.d === \"1\" || fraction.d === 1) {\n            display = fraction.n;\n        } else {\n            display = fraction.n + \"/\" + fraction.d;\n        }\n        if(fraction.s === \"-1\" || fraction.s === -1) {\n            display = \"-\" + display;\n        }\n        return display;\n    }\n\n    multiply(to, multiplier) {\n        let full = this.deepcopy();\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            console.log(\"Multiplyering\");\n            if(this.state.data[to][column].multiply(multiplier)) {\n                actuallyChanged = true;\n            }\n        }\n        if(actuallyChanged) {\n            this.update();\n            this.props.update(this.deepcopy(), (\n                <p style={{textAlign: \"center\"}}>\n                    Multiplied row <span className=\"standout\">{to+1}</span> by <span className=\"standout\">{this.format_fraction(multiplier)}</span>\n                </p>\n            ));\n        }\n    }\n\n    swap(a, b) {\n        let full = this.deepcopy();\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            let aData = this.state.data[a][column];\n            aData.syncValue();\n            let bData = this.state.data[b][column];\n            bData.syncValue();\n            if(!equal(aData.value, bData.value)) actuallyChanged = true;\n            this.state.data[a][column] = this.state.data[b][column];\n            this.state.data[b][column] = aData;\n        }\n        if(actuallyChanged) {\n            this.update();\n            this.props.update(this.deepcopy(), (\n                <p style={{textAlign: \"center\"}}>\n                    Swapped rows <span className=\"standout\">{a+1}</span> and <span className=\"standout\">{b+1}</span>\n                </p>\n            ));\n        }\n    }\n\n    clearFunctions() {\n        try {\n            const add = {\n                firstSelect: document.getElementById(\"addFrom\"),\n                secondSelect: document.getElementById(\"addTo\"),\n                multiplier: document.getElementById(\"addMultiplier\")\n            }\n            const multiply = {\n                select: document.getElementById(\"multiplyTo\"),\n                multiplier: document.getElementById(\"multiplyMultiplier\")\n            }\n            const swap = {\n                firstSelect: document.getElementById(\"swapA\"),\n                secondSelect: document.getElementById(\"swapB\")\n            }\n\n            let defaultSelect = 1;\n            let defaultMultiplier = \"\";\n\n            add.firstSelect.value = defaultSelect;\n            add.secondSelect.value = defaultSelect;\n            add.multiplier.value = defaultMultiplier;\n\n            multiply.select.value = defaultSelect;\n            multiply.multiplier.value = defaultMultiplier;\n\n            swap.firstSelect.value = defaultSelect;\n            swap.secondSelect.value = defaultSelect;\n\n            console.log(\"Cleared\");\n        } catch(e) {\n            console.log(\"Clearing Errored\", e);\n        }\n    }\n\n    recieveFromSquare(row, column, newDisplay) {\n        if(this.props.frozen) return;\n        this.state.data[row][column].setDisplay(newDisplay);\n        this.update();\n        this.props.update(this.deepcopy()); // this.state.data);\n    }\n\n    update() { this.setState({}); }\n\n    render() {\n\n        let display = [];\n        for(let row = 0; row < this.state.data.length; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.state.data[row].length; column++) {\n                if(this.props.frozen) { this.state.data[row][column].freeze(); }\n                currentRow.push(\n                    // Fix this, no new lines\n                    <MatrixSquare frozen={this.props.frozen} color={this.props.color} onClick={this.props.onClick} pos={this.props.pos} update={this.recieveFromSquare} row={row} column={column} value={this.state.data[row][column].getDisplay()} key={row+\"00\"+column} />\n                );\n            }\n\n            display.push(\n                <div key={row}>\n                    {currentRow}\n                </div>\n            );\n        }\n\n\n        return (\n            <>\n            <div className=\"center\">\n                <div id={this.props.id} className={this.props.className} >\n                    {display}\n                </div>\n            </div>\n                {this.props.controls && (\n                    <>\n                    <br/>\n                    <div id=\"controls\">\n                        <Add rowCount={this.props.mheight} action={this.add} clear={this.clearFunctions} />\n                        <br/>\n                        <Multiply rowCount={this.props.mheight} action={this.multiply} clear={this.clearFunctions} />\n                        <br/>\n                        <Swap rowCount={this.props.mheight} action={this.swap} clear={this.clearFunctions} />\n                    </div>\n                    </>\n                )}\n            </>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/GoHawk.25ecaf2a.png\";","import React from 'react';\nimport GoHawkImage from './GoHawk.png';\n\nexport class ThemedPage extends React.Component {\n    render() {\n        return (\n            <>\n                <div className=\"header\">\n                    <h1>Experimental Matrix Calculator</h1>\n                </div>\n                <div className=\"bar\"> </div>\n                <div className=\"inside\">\n                    <div className=\"center\">\n                        <div className=\"div1\">\n                            <div className=\"div2 sc2\">\n                            {this.props.children}\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"authors\">M<a id=\"rickRoll\" tabIndex=\"-1\" rel=\"noreferrer\" target=\"_blank\" href=\"https://youtu.be/dQw4w9WgXcQ\">a</a>de By: <a href=\"mailto:wyattspree@gmail.com\" rel=\"noreferrer\" tabIndex=\"-1\" target=\"_blank\">Wyatt Spree</a> & <a href=\"mailto:gaston95g@gmail.com\" tabIndex=\"-1\" rel=\"noreferrer\" target=\"_blank\">Gaston Gonnerman</a></p>\n                    <div className=\"imageHolder\">\n                        <img id=\"leftImage\" className=\"img\" alt=\"\" src={GoHawkImage} />\n                        <img id=\"rightImage\" className=\"img\" alt=\"\" src={GoHawkImage} />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport './index.css';\nimport { Matrix } from './matrix.js';\nimport { ThemedPage } from './ThemedPage.js';\n\nexport class App extends React.Component {\n// TODO: Clean up everything, comment stuff, and re-make the whole backend\n    constructor() {\n        super();\n        this.state = {\n            stage: 0,\n            currentIndex: 0\n        }\n        this.setMatrix = this.setMatrix.bind(this);\n        this.freezeMatrix = this.freezeMatrix.bind(this);\n        this.reset = this.reset.bind(this);\n        this.updateMatrix = this.updateMatrix.bind(this);\n        this.click = this.click.bind(this);\n        this.last = 0;\n        this.allMatricies = [];\n        this.descriptions = [];\n        this.currentIndex = 0;\n    }\n\n    click(pos) {\n        console.log(\"YOO, I GOT CLICKED BY \", pos);\n        this.setState({\n            currentIndex: pos\n        });\n    }\n\n    updateMatrix(data, description=\"\") {\n        console.log(\"Updaing matrix...\");\n        console.log(\"Last\", this.last);\n        console.log(\"New\", data);\n        this.allMatricies = this.allMatricies.slice(0, this.state.currentIndex+1);\n        this.descriptions = this.descriptions.slice(0, this.state.currentIndex);\n        this.allMatricies.push(data);\n        this.descriptions.push(description);\n        console.log(this.allMatricies);\n        this.setState({\n            currentIndex: this.state.currentIndex+1\n        });\n    }\n\n    reset() {\n        this.allMatricies = [];\n        this.setState({\n            stage: 0\n        });\n    }\n\n    setMatrix() {\n        const rows = document.getElementById(\"row\").value;\n        const columns = document.getElementById(\"column\").value;\n        this.setState({\n            stage: 1,\n            rows: rows,\n            columns: columns\n        });\n    }\n\n    freezeMatrix() {\n        this.setState({\n            stage: 2,\n            currentIndex: 0\n        });\n        this.allMatricies = [this.allMatricies[this.allMatricies.length-1]];\n        this.descriptions = [];\n        console.log(\"FREEZING THE MATRIX\");\n        console.log(this.allMatricies);\n    }\n\n    render() {\n        let returnValue = \"\";\n        switch(this.state.stage) {\n            case 0:\n                let options = []\n                for(let i = 1; i < 11; i++) {\n                    options.push(<option key={i} value={i}>{i}</option> );\n                }\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"inner-text instructions\">Please select the dimensions for a matrix m x n then click the \"Submit\" button</p>\n                        <br/>\n                        <div className=\"offset\">\n                            <ul>\n                                <li>\n                                    <label htmlFor=\"row\">Number of rows: m = </label>\n                                    <select id=\"row\">\n                                        {options}\n                                    </select>\n                                </li>\n                                <br/> <br/>\n                                <li>\n                                    <label htmlFor=\"column\">Number of columns: n = </label>\n                                    <select id=\"column\" style={{marginRight:1 +\"em\"}}>\n                                        {options}\n                                    </select>\n                                </li>\n                            </ul>\n                        </div>\n                        <br/> <br/>\n                        <button className=\"specialbutton submit\" onClick={this.setMatrix}>Submit</button>\n                    </ThemedPage>\n                );\n                break;\n            case 1:\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"instructions\">Please enter the elements of your matrix. Fields left empty will be interpreted as 0. <br/> You may use any mix of fractions and decimals. When you are done please click the \"Submit\" button. </p>\n                        <br/>\n                        <div className=\"center\">\n                            <Matrix id=\"matrix\" update={this.updateMatrix} mwidth={this.state.columns} mheight={this.state.rows} />\n                        </div>\n                        <br/> <br/>\n                        <button className=\"specialbutton\" tabIndex=\"-1\" onClick={this.reset}>Reset</button>\n                        <button className=\"specialbutton submit\" onClick={this.freezeMatrix}>Submit</button>\n                    </ThemedPage>\n                );\n                break;\n            case 2:\n                let out = [];\n                for(let i = 0; i < this.allMatricies.length; i++) {\n                //for(let i = this.allMatricies.length - 1; i >= 0; i--) {\n                    let id = i;\n                    let color = \"#f1f1f1\";\n                    if(i === this.state.currentIndex) {\n                        color=\"#FFC20F\";\n                        id = Math.random();\n                    }\n                    out.push(\n                        <>\n                        <Matrix color={color} onClick={this.click} pos={i} key={id} source={this.allMatricies[i]} frozen={true} mwidth={this.state.columns} mheight={this.state.rows} />\n                        {this.descriptions[i]}\n                        </>\n                    )\n                }\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"inner-text instructions\">Please select one of the below operations to manipulate the primary matrix.</p>\n                        <Matrix update={this.updateMatrix} key={this.state.currentIndex} id=\"matrix\" source={this.allMatricies[this.state.currentIndex]} frozen={true} controls={true} mwidth={this.state.columns} mheight={this.state.rows} />\n                        <br/>\n                        <button className=\"specialbutton\" tabIndex=\"-1\" onClick={this.reset}>Reset</button>\n                        <div className=\"old\">\n                            {out}\n                        </div>\n                    </ThemedPage>\n                );\n                break;\n            default:\n                returnValue = (\n                    <div>Uh-oh... Something broke (HTTP Response Code 418)</div>\n                )\n                break;\n        }\n        return returnValue;\n    }\n}","import React from 'react';\nimport './index.css';\nimport { Helmet } from 'react-helmet';\nimport { App } from './app.js';\n\nconst TITLE=\"Matrix Calculator\";\n\nexport class Header extends React.Component {\n\n    render() {\n        return (\n            <>\n            <Helmet>\n                <title>{ TITLE }</title>\n            </Helmet>\n            <App />\n            </>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app.js';\nimport { Header } from './header.js';\nimport './index.css';\n\nReactDOM.render(\n    <Header />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}