{"version":3,"sources":["holder.js","matrix-square.js","add.js","multiply.js","swap.js","matrix.js","GoHawk.png","ThemedPage.js","app.js","header.js","index.js"],"names":["Holder","display","this","isSuccessful","match","length","substr","syncValue","value","fraction","console","log","d","n","s","factor","other","result","add","multiply","equal","syncDisplay","MatrixSquare","update","bind","click","event","props","row","column","target","onClick","pos","frozen","id","tabIndex","style","backgroundColor","color","onChange","className","React","Component","Add","confirmAdd","from","Math","floor","document","getElementById","multiplier","to","action","clear","error","options","i","rowCount","push","placeholder","Multiply","confirmMultiply","toChange","multiplierChange","setState","Swap","confirmSwap","swapA","swapB","Matrix","data","source","isForDisplay","mheight","currentRow","mwidth","state","recieveFromSquare","clearFunctions","swap","full","actuallyChanged","deepcopy","textAlign","format_fraction","a","b","aData","bData","firstSelect","secondSelect","select","e","newDisplay","setDisplay","freeze","getDisplay","controls","ThemedPage","children","rel","href","alt","src","GoHawkImage","App","stage","currentIndex","setMatrix","freezeMatrix","reset","updateMatrix","last","allMatricies","descriptions","description","slice","rows","columns","returnValue","htmlFor","marginRight","out","random","Header","Helmet","ReactDOM","render"],"mappings":"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","file":"static/js/main.4b8b92ca.chunk.js","sourcesContent":["import { add, multiply, fraction, equal } from 'mathjs';\n\nexport class Holder {\n    constructor(display=\"\") {\n        this.display = display;\n        //this.value = fraction(\"0\");\n        //this.syncValue();\n        this.isSuccessful = true;\n    }\n\n    freeze() {\n        if(!this.display) { this.display = \"0\"; }\n    }\n\n    getDisplay() {\n        return this.display;\n    }\n\n    setDisplay(display) {\n        if(display.match(\"[^0-9-/.]\")) return;\n        while(display.length > 1 && display[0] === \"0\") {\n            display = display.substr(1);\n        }\n        this.display = display;\n        this.syncValue();\n    }\n\n    getValue() {\n        return this.value;\n    }\n\n    syncValue() {\n        try {\n            this.value = fraction(this.display)\n            this.isSuccessful = true;\n            console.log(\"Synced Values Successfully\");\n        } catch {\n            this.isSuccessful = false;\n            console.log(\"Errors Syncing Value\");\n        }\n        return this.value;\n    }\n\n    syncDisplay() {\n        try {\n            if(this.value.d === \"1\" || this.value.d === 1) {\n                this.display = this.value.n;\n            } else {\n                this.display = this.value.n + \"/\" + this.value.d;\n            }\n            if(this.value.s === \"-1\" || this.value.s === -1) {\n                this.display = \"-\" + this.display;\n            }\n        } catch {\n            console.log(\"Errors Syncing Display\");\n        }\n    }\n\n    add(factor, other) {\n        this.syncValue();\n        other.syncValue();\n        let result = add(this.value, multiply(factor, other.value));\n        if(equal(this.value, result)) return false;\n        // TODO: Clean up and add this checking to other options (multiply, i guess swap doesnt exist; probably make it exist)\n        console.log(this.value, result);\n        this.value = result;\n        this.syncDisplay();\n        return true;\n    }\n\n    multiply(factor) {\n        this.syncValue();\n        let result = multiply(factor, this.value);\n        console.log(\"YO\");\n        console.log(this.value, result, factor);\n        if(equal(this.value, result)) return false;\n        this.value = result;\n        this.syncDisplay();\n        return true;\n    }\n}","import React from 'react';\nimport './index.css';\n\nexport class MatrixSquare extends React.Component {\n\n  componentWillMount() {\n    this.update = this.update.bind(this);\n    this.click = this.click.bind(this);\n  }\n\n  update(event) {\n    this.props.update(this.props.row, this.props.column, event.target.value);\n  }\n\n  click() {\n    if(!this.props.onClick) return;\n    this.props.onClick(this.props.pos);\n  }\n\n  render() {\n    if(this.props.frozen) {\n      return (\n        <input id={this.props.id} tabIndex=\"-1\" onClick={this.click} style={{backgroundColor: this.props.color}} onChange={this.update} value={this.props.value} className=\"matrixSquare\"></input>\n      );\n    } else {\n      return (\n        <input id={this.props.id} onClick={this.click} onChange={this.update} value={this.props.value} className=\"matrixSquare\"></input>\n      );\n    }\n  }\n\n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport './index.css';\n\nexport class Add extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmAdd = this.confirmAdd.bind(this);\n  }\n\n  confirmAdd() {\n    try {\n      const from = Math.floor( document.getElementById(\"addFrom\").value ) - 1;\n      const multiplier = fraction( document.getElementById(\"addMultiplier\").value || 0 );\n      const to = Math.floor( document.getElementById(\"addTo\").value ) - 1;\n      this.props.action(to, multiplier, from);\n      this.props.clear();\n    } catch(error) {\n      console.log(\"Add Error\", error);\n    }\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Add row\n              <select id='addFrom'>\n                {options}\n              </select>\n              <span>multiplied by</span>\n              <input id=\"addMultiplier\" placeholder=\"0\"></input> to row\n              <select id='addTo'>\n                {options}\n              </select>\n              <button onClick={this.confirmAdd}>Confirm</button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport './index.css';\n\nexport class Multiply extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmMultiply = this.confirmMultiply.bind(this);\n    this.toChange = this.toChange.bind(this);\n    this.multiplierChange = this.multiplierChange.bind(this);\n    // this.state = {\n    //   to: 1,\n    //   multiplier: \"\"\n    // }\n  }\n\n  toChange(value) {\n    this.setState({\n      to: value.target.value\n    });\n  }\n\n  multiplierChange(value) {\n    this.setState({\n      multiplier: value.target.value\n    });\n  }\n\n  confirmMultiply() {\n    try {\n      const to = Math.floor( document.getElementById(\"multiplyTo\").value ) - 1;\n      const multiplier = fraction( document.getElementById(\"multiplyMultiplier\").value || 1 );\n      this.props.action(to, multiplier);\n      this.props.clear();\n    }\n    catch (error) {\n      console.log(\"Multiply Error\", error);\n    }\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Multiply row\n              <select onChange={this.toChange} id='multiplyTo'>\n                {options}\n              </select>\n              <span>by</span>\n              <input onChange={this.multiplierChange} id=\"multiplyMultiplier\" placeholder=\"1\"></input>\n              <button onClick={this.confirmMultiply}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport './index.css';\n\nexport class Swap extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmSwap = this.confirmSwap.bind(this);\n  }\n\n  confirmSwap() {\n    const swapA = Math.floor( document.getElementById(\"swapA\").value ) - 1;\n    const swapB = Math.floor( document.getElementById(\"swapB\").value ) - 1;\n    this.props.action(swapA, swapB);\n    this.props.clear();\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Swap rows\n              <select id='swapA'>\n                {options}\n              </select>\n              <span>and</span>\n              <select id='swapB'>\n                {options}\n              </select>\n              <button onClick={this.confirmSwap}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n}","import React from 'react';\nimport './index.css';\nimport { Holder } from './holder.js';\nimport { equal, format } from 'mathjs';\nimport { MatrixSquare } from './matrix-square.js';\nimport { Add } from './add.js';\nimport { Multiply } from './multiply.js';\nimport { Swap } from './swap.js';\n\nexport class Matrix extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        let data = [];\n        let hasSource = false;\n        if(this.props.source) hasSource = true;\n\n        if(this.props.isForDisplay && this.props.source) {\n            for(let row = 0; row < this.props.mheight; row++) {\n                let currentRow = [];\n                for(let column = 0; column < this.props.mwidth; column++) {\n                    console.log(\"Checking for sources efficiently....!!!!\");\n                    currentRow.push(this.props.source[row][column].display || \"0\");\n                }\n                data.push(currentRow);\n            }\n        } else {\n            if(this.props.source) {\n                for(let row = 0; row < this.props.mheight; row++) {\n                    let currentRow = [];\n                    for(let column = 0; column < this.props.mwidth; column++) {\n                        //currentRow.push(new Holder());\n                        console.log(\"Checking for sources....!!!!\");\n                        currentRow.push(new Holder(this.props.source[row][column].display));\n                    }\n                    data.push(currentRow);\n                }\n            } else {\n                for(let row = 0; row < this.props.mheight; row++) {\n                    let currentRow = [];\n                    for(let column = 0; column < this.props.mwidth; column++) {\n                        console.log(\"Checking for sources....!!!!\");\n                        currentRow.push(new Holder());\n                    }\n                    data.push(currentRow);\n                }\n            }\n        }\n\n        this.state = {\n            data: data\n        };\n\n        this.recieveFromSquare = this.recieveFromSquare.bind(this);\n        this.clearFunctions = this.clearFunctions.bind(this);\n        this.add = this.add.bind(this);\n        this.multiply = this.multiply.bind(this);\n        this.swap = this.swap.bind(this);\n    }\n\n    deepcopy() {\n        // TOODO: Potentially change to a mapping system\n        let full = [];\n        for(let row = 0; row < this.props.mheight; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.props.mwidth; column++) {\n                currentRow.push(new Holder(this.state.data[row][column].display));\n            }\n            full.push(currentRow);\n        }\n        return full;\n    }\n\n    add(to, multiplier, from) {\n        console.log(\"Got into adding stage\");\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            console.log(\"Got looping\");\n            console.log(this.state.data[to], this.state.data[from]);\n            if(this.state.data[to][column].add(multiplier, this.state.data[from][column])) {\n                actuallyChanged = true;\n            }\n        }\n        console.log(\"Finished looping\");\n        if(actuallyChanged) {\n            this.update();\n            this.props.update(this.deepcopy(), (\n                <p style={{textAlign: \"center\"}}>\n                    Added <span className=\"standout\">{this.format_fraction(multiplier)}</span> times row <span className=\"standout\">{from+1}</span> to row <span className=\"standout\">{to+1}</span>\n                </p>\n            ));\n        }\n    }\n\n    format_fraction(fraction) {\n        let display = \"\"\n        if(fraction.d === \"1\" || fraction.d === 1) {\n            display = fraction.n;\n        } else {\n            display = fraction.n + \"/\" + fraction.d;\n        }\n        if(fraction.s === \"-1\" || fraction.s === -1) {\n            display = \"-\" + display;\n        }\n        return display;\n    }\n\n    multiply(to, multiplier) {\n        let full = this.deepcopy();\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            console.log(\"Multiplyering\");\n            if(this.state.data[to][column].multiply(multiplier)) {\n                actuallyChanged = true;\n            }\n        }\n        if(actuallyChanged) {\n            this.update();\n            this.props.update(this.deepcopy(), (\n                <p style={{textAlign: \"center\"}}>\n                    Multiplied row <span className=\"standout\">{to+1}</span> by <span className=\"standout\">{this.format_fraction(multiplier)}</span>\n                </p>\n            ));\n        }\n    }\n\n    swap(a, b) {\n        let full = this.deepcopy();\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            let aData = this.state.data[a][column];\n            aData.syncValue();\n            let bData = this.state.data[b][column];\n            bData.syncValue();\n            if(!equal(aData.value, bData.value)) actuallyChanged = true;\n            this.state.data[a][column] = this.state.data[b][column];\n            this.state.data[b][column] = aData;\n        }\n        if(actuallyChanged) {\n            this.update();\n            this.props.update(this.deepcopy(), (\n                <p style={{textAlign: \"center\"}}>\n                    Swapped rows <span className=\"standout\">{a+1}</span> and <span className=\"standout\">{b+1}</span>\n                </p>\n            ));\n        }\n    }\n\n    clearFunctions() {\n        try {\n            const add = {\n                firstSelect: document.getElementById(\"addFrom\"),\n                secondSelect: document.getElementById(\"addTo\"),\n                multiplier: document.getElementById(\"addMultiplier\")\n            }\n            const multiply = {\n                select: document.getElementById(\"multiplyTo\"),\n                multiplier: document.getElementById(\"multiplyMultiplier\")\n            }\n            const swap = {\n                firstSelect: document.getElementById(\"swapA\"),\n                secondSelect: document.getElementById(\"swapB\")\n            }\n\n            let defaultSelect = 1;\n            let defaultMultiplier = \"\";\n\n            add.firstSelect.value = defaultSelect;\n            add.secondSelect.value = defaultSelect;\n            add.multiplier.value = defaultMultiplier;\n\n            multiply.select.value = defaultSelect;\n            multiply.multiplier.value = defaultMultiplier;\n\n            swap.firstSelect.value = defaultSelect;\n            swap.secondSelect.value = defaultSelect;\n\n            console.log(\"Cleared\");\n        } catch(e) {\n            console.log(\"Clearing Errored\", e);\n        }\n    }\n\n    recieveFromSquare(row, column, newDisplay) {\n        if(this.props.frozen) return;\n        this.state.data[row][column].setDisplay(newDisplay);\n        this.update();\n        this.props.update(this.deepcopy()); // this.state.data);\n    }\n\n    update() { this.setState({}); }\n\n    render() {\n\n        let display = [];\n        for(let row = 0; row < this.state.data.length; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.state.data[row].length; column++) {\n                if(this.props.frozen && !this.props.isForDisplay) { this.state.data[row][column].freeze(); }\n                if(!this.props.isForDisplay) {\n                    currentRow.push(\n                        <MatrixSquare frozen={this.props.frozen} color={this.props.color} onClick={this.props.onClick} pos={this.props.pos} update={this.recieveFromSquare} row={row} column={column} value={this.state.data[row][column].getDisplay()} key={row+\"00\"+column} />\n                        // Fix this, no new lines\n                    );\n                } else {\n                    currentRow.push(\n                        <MatrixSquare frozen={this.props.frozen} color={this.props.color} onClick={this.props.onClick} pos={this.props.pos} update={this.recieveFromSquare} row={row} column={column} value={this.state.data[row][column]} key={row+\"00\"+column} />\n                        // Fix this, no new lines\n                    );\n                }\n            }\n\n            display.push(\n                <div key={row}>\n                    {currentRow}\n                </div>\n            );\n        }\n\n\n        return (\n            <>\n            <div className=\"center\">\n                <div id={this.props.id} className={this.props.className} >\n                    {display}\n                </div>\n            </div>\n                {this.props.controls && (\n                    <>\n                    <br/>\n                    <div id=\"controls\">\n                        <Add rowCount={this.props.mheight} action={this.add} clear={this.clearFunctions} />\n                        <br/>\n                        <Multiply rowCount={this.props.mheight} action={this.multiply} clear={this.clearFunctions} />\n                        <br/>\n                        <Swap rowCount={this.props.mheight} action={this.swap} clear={this.clearFunctions} />\n                    </div>\n                    </>\n                )}\n            </>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/GoHawk.25ecaf2a.png\";","import React from 'react';\nimport GoHawkImage from './GoHawk.png';\n\nexport class ThemedPage extends React.Component {\n    render() {\n        return (\n            <>\n                <div className=\"header\">\n                    <h1>Temporary Experimental Matrix Calculator</h1>\n                </div>\n                <div className=\"bar\"> </div>\n                <div className=\"inside\">\n                    <div className=\"center\">\n                        <div className=\"div1\">\n                            <div className=\"div2 sc2\">\n                            {this.props.children}\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"authors\">M<a id=\"rickRoll\" tabIndex=\"-1\" rel=\"noreferrer\" target=\"_blank\" href=\"https://youtu.be/dQw4w9WgXcQ\">a</a>de By: <a href=\"mailto:wyattspree@gmail.com\" rel=\"noreferrer\" tabIndex=\"-1\" target=\"_blank\">Wyatt Spree</a> & <a href=\"mailto:gaston95g@gmail.com\" tabIndex=\"-1\" rel=\"noreferrer\" target=\"_blank\">Gaston Gonnerman</a></p>\n                    <div className=\"imageHolder\">\n                        <img id=\"leftImage\" className=\"img\" alt=\"\" src={GoHawkImage} />\n                        <img id=\"rightImage\" className=\"img\" alt=\"\" src={GoHawkImage} />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport './index.css';\nimport { Matrix } from './matrix.js';\nimport { ThemedPage } from './ThemedPage.js';\n\nexport class App extends React.Component {\n// TODO: Clean up everything, comment stuff, and re-make the whole backend\n    constructor() {\n        super();\n        this.state = {\n            stage: 0,\n            currentIndex: 0\n        }\n        this.setMatrix = this.setMatrix.bind(this);\n        this.freezeMatrix = this.freezeMatrix.bind(this);\n        this.reset = this.reset.bind(this);\n        this.updateMatrix = this.updateMatrix.bind(this);\n        this.click = this.click.bind(this);\n        this.last = 0;\n        this.allMatricies = [];\n        this.descriptions = [];\n        this.currentIndex = 0;\n    }\n\n    click(pos) {\n        console.log(\"YOO, I GOT CLICKED BY \", pos);\n        this.setState({\n            currentIndex: pos\n        });\n    }\n\n    updateMatrix(data, description=\"\") {\n        console.log(\"Updaing matrix...\");\n        console.log(\"Last\", this.last);\n        console.log(\"New\", data);\n        this.allMatricies = this.allMatricies.slice(0, this.state.currentIndex+1);\n        this.descriptions = this.descriptions.slice(0, this.state.currentIndex);\n        this.allMatricies.push(data);\n        this.descriptions.push(description);\n        console.log(this.allMatricies);\n        this.setState({\n            currentIndex: this.state.currentIndex+1\n        });\n    }\n\n    reset() {\n        this.allMatricies = [];\n        this.setState({\n            stage: 0\n        });\n    }\n\n    setMatrix() {\n        const rows = document.getElementById(\"row\").value;\n        const columns = document.getElementById(\"column\").value;\n        this.setState({\n            stage: 1,\n            rows: rows,\n            columns: columns\n        });\n    }\n\n    freezeMatrix() {\n        this.setState({\n            stage: 2,\n            currentIndex: 0\n        });\n        this.allMatricies = [this.allMatricies[this.allMatricies.length-1]];\n        this.descriptions = [];\n        console.log(\"FREEZING THE MATRIX\");\n        console.log(this.allMatricies);\n    }\n\n    render() {\n        let returnValue = \"\";\n        switch(this.state.stage) {\n            case 0:\n                let options = []\n                for(let i = 1; i < 11; i++) {\n                    options.push(<option key={i} value={i}>{i}</option> );\n                }\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"inner-text instructions\">Please select the dimensions for a matrix m x n then click the \"Submit\" button</p>\n                        <br/>\n                        <div className=\"offset\">\n                            <ul>\n                                <li>\n                                    <label htmlFor=\"row\">Number of rows: m = </label>\n                                    <select id=\"row\">\n                                        {options}\n                                    </select>\n                                </li>\n                                <br/> <br/>\n                                <li>\n                                    <label htmlFor=\"column\">Number of columns: n = </label>\n                                    <select id=\"column\" style={{marginRight:1 +\"em\"}}>\n                                        {options}\n                                    </select>\n                                </li>\n                            </ul>\n                        </div>\n                        <br/> <br/>\n                        <button className=\"specialbutton submit\" onClick={this.setMatrix}>Submit</button>\n                    </ThemedPage>\n                );\n                break;\n            case 1:\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"instructions\">Please enter the elements of your matrix. Fields left empty will be interpreted as 0. <br/> You may use any mix of fractions and decimals. When you are done please click the \"Submit\" button. </p>\n                        <br/>\n                        <div className=\"center\">\n                            <Matrix id=\"matrix\" update={this.updateMatrix} mwidth={this.state.columns} mheight={this.state.rows} />\n                        </div>\n                        <br/> <br/>\n                        <button className=\"specialbutton\" tabIndex=\"-1\" onClick={this.reset}>Reset</button>\n                        <button className=\"specialbutton submit\" onClick={this.freezeMatrix}>Submit</button>\n                    </ThemedPage>\n                );\n                break;\n            case 2:\n                let out = [];\n                for(let i = 0; i < this.allMatricies.length; i++) {\n                //for(let i = this.allMatricies.length - 1; i >= 0; i--) {\n                    let id = i;\n                    let color = \"#f1f1f1\";\n                    if(i === this.state.currentIndex) {\n                        color=\"#FFC20F\";\n                        id = Math.random();\n                    }\n                    out.push(\n                        <>\n                        <Matrix isForDisplay={true} color={color} onClick={this.click} pos={i} key={id} source={this.allMatricies[i]} frozen={true} mwidth={this.state.columns} mheight={this.state.rows} />\n                        {this.descriptions[i]}\n                        </>\n                    )\n                }\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"inner-text instructions\">Please select one of the below operations to manipulate the primary matrix.</p>\n                        <Matrix update={this.updateMatrix} key={this.state.currentIndex} id=\"matrix\" source={this.allMatricies[this.state.currentIndex]} frozen={true} controls={true} mwidth={this.state.columns} mheight={this.state.rows} />\n                        <br/>\n                        <button className=\"specialbutton\" tabIndex=\"-1\" onClick={this.reset}>Reset</button>\n                        <div className=\"old\">\n                            {out}\n                        </div>\n                    </ThemedPage>\n                );\n                break;\n            default:\n                returnValue = (\n                    <div>Uh-oh... Something broke (HTTP Response Code 418)</div>\n                )\n                break;\n        }\n        return returnValue;\n    }\n}","import React from 'react';\nimport './index.css';\nimport { Helmet } from 'react-helmet';\nimport { App } from './app.js';\n\nconst TITLE=\"Matrix Calculator\";\n\nexport class Header extends React.Component {\n\n    render() {\n        return (\n            <>\n            <Helmet>\n                <title>{ TITLE }</title>\n            </Helmet>\n            <App />\n            </>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app.js';\nimport { Header } from './header.js';\nimport './index.css';\n\nReactDOM.render(\n    <Header />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}